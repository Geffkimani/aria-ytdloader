name: Build Application

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'  # âœ… Use stable version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Confirm Python and pip
      run: |
        echo "PATH: $PATH"
        which python
        python --version
        pip list

    - name: Ensure assets directory exists
      run: mkdir -p assets
      shell: bash

    - name: Clear existing assets
      run: rm -rf assets/*
      shell: bash

    - name: Download and prepare assets (Linux)
      if: runner.os == 'Linux'
      run: |
        curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o assets/yt-dlp
        sudo apt-get update
        sudo apt-get install -y aria2
        cp /usr/bin/aria2c assets/aria2c
        chmod +x assets/yt-dlp
        chmod +x assets/aria2c

    - name: Download and prepare assets (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe" -OutFile "assets/yt-dlp.exe"
        Rename-Item -Path "assets/yt-dlp.exe" -NewName "yt-dlp"
        choco install aria2 -y
        Copy-Item "C:\ProgramData\chocolatey\bin\aria2c.exe" -Destination "assets\aria2c.exe"

    - name: Download and prepare assets (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install aria2
        curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos -o assets/yt-dlp
        cp $(which aria2c) assets/aria2c
        chmod +x assets/yt-dlp
        chmod +x assets/aria2c

    - name: Build with PyInstaller
      run: python -m PyInstaller build.spec

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: AriaDownloader-${{ runner.os }}
        path: dist/*
